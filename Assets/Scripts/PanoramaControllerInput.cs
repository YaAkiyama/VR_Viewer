using UnityEngine;
using UnityEngine.InputSystem;

public class PanoramaControllerInput : MonoBehaviour
{
    private Panorama360Controller panoramaController;
    private MapMarkerManager markerManager;

    // 入力アクションリファレンス
    [SerializeField] private InputActionReference rightPrimaryButtonAction;
    [SerializeField] private InputActionReference leftPrimaryButtonAction;

    private bool rightButtonPressed = false;
    private bool leftButtonPressed = false;

    void Start()
    {
        panoramaController = GetComponent<Panorama360Controller>();

        // MapMarkerManagerの参照を取得
        markerManager = FindFirstObjectByType<MapMarkerManager>();
        if (markerManager == null)
        {
            Debug.LogError("MapMarkerManagerが見つかりません。PanoramaControllerInputを使用するにはMapMarkerManagerが必要です。");
            enabled = false; // エラーがある場合はコンポーネントを無効化
            return;
        }

        // 入力アクションのコールバックを設定
        if (rightPrimaryButtonAction != null)
        {
            rightPrimaryButtonAction.action.performed += OnRightPrimaryButtonPressed;
            rightPrimaryButtonAction.action.canceled += OnRightPrimaryButtonReleased;
            rightPrimaryButtonAction.action.Enable();
        }

        if (leftPrimaryButtonAction != null)
        {
            leftPrimaryButtonAction.action.performed += OnLeftPrimaryButtonPressed;
            leftPrimaryButtonAction.action.canceled += OnLeftPrimaryButtonReleased;
            leftPrimaryButtonAction.action.Enable();
        }
    }

    void OnDestroy()
    {
        // 入力アクションのコールバックを解除
        if (rightPrimaryButtonAction != null)
        {
            rightPrimaryButtonAction.action.performed -= OnRightPrimaryButtonPressed;
            rightPrimaryButtonAction.action.canceled -= OnRightPrimaryButtonReleased;
            rightPrimaryButtonAction.action.Disable();
        }

        if (leftPrimaryButtonAction != null)
        {
            leftPrimaryButtonAction.action.performed -= OnLeftPrimaryButtonPressed;
            leftPrimaryButtonAction.action.canceled -= OnLeftPrimaryButtonReleased;
            leftPrimaryButtonAction.action.Disable();
        }
    }

    private void OnRightPrimaryButtonPressed(InputAction.CallbackContext context)
    {
        if (!rightButtonPressed)
        {
            rightButtonPressed = true;
            markerManager.SelectNextMarker(); // panoramaController.NextPanorama()から変更
        }
    }

    private void OnRightPrimaryButtonReleased(InputAction.CallbackContext context)
    {
        rightButtonPressed = false;
    }

    private void OnLeftPrimaryButtonPressed(InputAction.CallbackContext context)
    {
        if (!leftButtonPressed)
        {
            leftButtonPressed = true;
            markerManager.SelectPreviousMarker(); // panoramaController.PreviousPanoramaから変更
        }
    }

    private void OnLeftPrimaryButtonReleased(InputAction.CallbackContext context)
    {
        leftButtonPressed = false;
    }
}